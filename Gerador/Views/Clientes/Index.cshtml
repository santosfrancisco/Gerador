@using PagedList.Mvc;
@*@model IEnumerable<Gerador.Models.Clientes>*@
@model PagedList.IPagedList<Gerador.Models.Clientes>

@{
	ViewBag.Title = "Index";
}

<h2>Clientes</h2>
<div class="well well-sm form-inline">
	@using (Html.BeginForm("Index", "Clientes"))
	{



		<div class="form-group">
			<div class="col-lg-12">
				<div class="input-group">
					<input type="text" name="searchString" class="form-control" value="@ViewBag.CurrentFilter" placeholder="Pesquisar...">
					<span class="input-group-btn">
						<button class="btn btn-default" type="submit"><span class="glyphicon glyphicon-search"></span></button>
					</span>
				</div>
			</div>
		</div>
		if (@ViewBag.CurrentFilter != null)
		{
			<a class="btn badge" href="@Url.Action("Index", new { @searchString = "" })"><span class="glyphicon glyphicon-remove"></span> limpar</a>
		}
	}
</div>
<p>
    @Html.ActionLink("Novo cliente", "Create", null, htmlAttributes: new { @class = "btn btn-primary btn-xs" })
</p>
<table class="table table-hover">
	<thead>
		<tr>
			<th class="col-md-1"></th>
			<th class="col-md-1">
				@Html.DisplayNameFor(model => model.First().TipoPessoa)
			</th>
			<th class="col-md-4">
				@Html.DisplayNameFor(model => model.First().Nome)
			</th>
			<th class="col-md-2">
				@Html.DisplayNameFor(model => model.First().CpfCnpj)
			</th>
			<th class="col-md-4">
				<span>Usuário responsável</span>
				@*@Html.DisplayNameFor(model => model.First().User.Nome)*@
			</th>
			
		</tr>
	</thead>
	<tbody>
		@if (Model.Count != 0)
		{
			foreach (var item in Model)
			{
			<tr>
				<td>
					<div id="menuGerenciar" class="btn-group">
						<div class="btn-group">
							<a href="#" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
								Menu
								<span class="caret"></span>
							</a>
							<ul class="dropdown-menu">
								<li><a href="@Url.Action("Edit", "Clientes", new { id = item.IDCliente })"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> Editar</a></li>
								<li><a href="@Url.Action("Details", "Clientes", new { id = item.IDCliente })"><span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span> Detalhes</a></li>
								@*<li class="divider"></li>
                                <li><a href="@Url.Action("Delete", "Clientes", new { id = item.IDCliente }, null)"><span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> Remover</a></li>*@
							</ul>
						</div>
					</div>
				</td>
				<td>
					@if(item.TipoPessoa == 0)
					{
						<span class="badge">PF</span>
					}
					else
					{
						<span class="badge">PJ</span>
					}
					@*@Html.DisplayFor(modelItem => item.TipoPessoa)*@
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Nome)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.CpfCnpj)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.User.Nome)
				</td>
			</tr>
			}
		} else
		{
			<tr>
				<td colspan="5">
					<span>Nenhum cliente encontrado.</span>
				</td>
			</tr>
		}
	</tbody>
	<tfoot>
		<tr>
			<td colspan="5" class="pagination-sm text-center">
				@*Page @( Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount*@
				@Html.PagedListPager(Model, page => Url.Action("Index", new { page, currentFilter = ViewBag.CurrentFilter }))
			</td>
		</tr>
	</tfoot>
</table>
