@model Gerador.Models.Unidades

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Unidades</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
            @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
            </div>
        </div>*@
		<div class="form-group">
			@Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
				@Html.TextArea("unidades", htmlAttributes: new { @class = "form-control" })
				<span class="text-info" style="font-size:9.0pt"><i>* Insira uma unidade por linha</i></span>
			</div>
		</div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDEmpreendimento, "IDEmpreendimento", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("IDEmpreendimento", null, htmlAttributes: new { @class = "form-control" })*@
				@Html.DropDownListFor(model => model.IDEmpreendimento, ViewData["IDEmpreendimento"] as SelectList, null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDEmpreendimento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnidadeStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.UnidadeStatus, htmlAttributes: new { @class = "form-control" })
                @*@Html.DropDownListFor(model => model.UnidadeStatus, ViewData["UnidadeStatus"] as SelectList, null, htmlAttributes: new { @class = "form-control" })*@
				@Html.ValidationMessageFor(model => model.UnidadeStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tipo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Tipo, htmlAttributes: new { @class = "form-control" })
                @*@Html.DropDownListFor(model => model.Tipo, ViewData["Tipo"] as SelectList, null, htmlAttributes: new { @class = "form-control" })*@
				@Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnidadeObservacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnidadeObservacao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnidadeObservacao, "", new { @class = "text-danger" })
            </div>
        </div>

		

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@*----------------------*@

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
